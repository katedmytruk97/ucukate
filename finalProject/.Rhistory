library(ggplot2)
## Простий графік
{r, eval=FALSE, echo=TRUE}
library(ggplot2)
data("iris") #завантаження датасету
head(iris)
{r, eval=FALSE, echo=TRUE}
library(ggplot2)
data("iris") #завантаження датасету
head(iris)
{r, eval=FALSE, echo=TRUE}
head(iris)
{r, eval=FALSE, echo=TRUE}
head(iris)
{r, eval=FALSE, echo=TRUE}
library(ggplot2)
data("iris") #завантаження датасету
{r, eval=FALSE, echo=TRUE}
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point()
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)+
facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point(color = "red")+
geom_smooth(method = "lm", se = FALSE)+
facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point(color = "green")+
geom_smooth(method = "lm", se = FALSE)+
facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point(color = "black")+
geom_smooth(method = "lm", se = FALSE)+
facet_wrap(~Species)
ggplot(head(prcp, 10))+
geom_bar(aes(reorder(city, precipitation),
precipitation),
stat="identity",
fill="darkred")+
coord_flip()
ggplot(head(prcp, 10))+
geom_bar(aes(reorder(city, precipitation),
precipitation),
stat="identity",
fill="darkred")+
coord_flip()
library(datasets)
data("precip")
prcp <- data.frame(city = as.character(names(precip)),
precipitation = (unname(precip)))
ggplot(head(prcp, 10))+
geom_bar(aes(reorder(city, precipitation),
precipitation),
stat="identity",
fill="darkred")+
coord_flip()
ggplot(head(prcp, 10))+
geom_bar(aes(reorder(city, precipitation),
precipitation),
stat="identity",
fill="darkred")+
coord_flip()
ggplot(prcp)+
geom_bar(aes(x= city,
y = precipitation),
precipitation),
ggplot(prcp)+
geom_bar(aes(x= city,
y = precipitation),
precipitation),
ggplot(prcp)+
geom_bar(aes(x= city,y = precipitation),
precipitation),
ggplot(prcp)+
geom_bar(aes(x= reorder(city,precipitation),
y = precipitation),
stat="identity",
fill="darkblue")+
coord_flip()
ggplot(prcp)+
geom_bar(aes(x= reorder(city,precipitation),
y = precipitation),
stat="identity",
fill="darkblue")+
coord_flip()
ggplot(prcp)+
geom_bar(aes(x= reorder(city,precipitation),
y = precipitation),
stat="identity",
fill="darkblue")+
coord_flip()
data("economics")
head(economics)
ggplot(prcp)+
geom_bar(aes(x= reorder(city,precipitation), #Reorder це функція яка пересортує city і пересортовує її так як нам зручно. Помагає посуртувати дані не за алфавітом а в порядку збільшення чи зменшення.
y = precipitation),
stat="identity",
fill="darkblue")+
coord_flip()
data("economics")
head(economics)
data("economics")+
head(economics)
data("economics")
head(economics)
ggplot(economics)+
geom_area(aes(date, unemploy),
stat="identity",
fill="darkred",
alpha=0.3)+
geom_line(aes(date, unemploy),
size=1,
color="darkred")
data("economics")
head(economics)
ggplot(economics)+
geom_area(aes(x = date, y = unemploy),
stat="identity",
fill="darkred",
alpha=0.3)+
geom_line(aes(x = date, y = unemploy),
size=1,
color="darkred")
theme_grey()
data("economics")
head(economics)
ggplot(economics)+
geom_area(aes(x = date, y = unemploy),
stat="identity",
fill="darkred",
alpha=0.3)+
geom_line(aes(x = date, y = unemploy),
size=1,
color="darkred")
theme_gray()
data("economics")
head(economics)
ggplot(economics)+
geom_area(aes(x = date, y = unemploy),
stat="identity",
fill="darkred",
alpha=0.3)+
geom_line(aes(x = date, y = unemploy),
size=1,
color="darkred")+
theme_gray()
data("mtcars")
head(mtcars)
{r, eval=FALSE}
data("mtcars")
head(mtcars)
{r
ggplot(mtcars)+
geom_histogram(aes(mpg),
binwidth = 1,
data("mtcars")
head(mtcars)
ggplot(mtcars)+
geom_histogram(aes(mpg),
binwidth = 1,
data("mtcars")
head(mtcars)
ggplot(mtcars)+
geom_histogram(aes(mpg),
binwidth = 1,
ggplot(mtcars)+
geom_histogram(aes(mpg),
binwidth = 1,
data("mtcars")
head(mtcars)
ggplot(mtcars)+
geom_histogram(aes(mpg),
binwidth = 1,
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
library(dplyr)
data("mtcars")
head(mtcars)
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
ggplot(declarations) +
geom_histogram(aes(income),
binwidth = 10000)
library(dplyr)
data("mtcars")
head(mtcars)
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
ggplot(declarations) +
geom_histogram(aes(flat_area),
binwidth = 10)
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
ggplot(declarations_source) +
geom_histogram(aes(flat_area),
binwidth = 10)
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
ggplot(declarations) +
geom_histogram (aes(flat_area),
binwidth = 10)
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
ggplot(declarations) +
geom_histogram(aes(flat_area),
binwidth = 10)
library(ggplot2)
data("iris") #завантаження датасету
head(iris)
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point()
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)+
facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,
y=Sepal.Width,
color = Species))+
geom_point(color = "black")+
geom_smooth(method = "lm", se = FALSE)+
facet_wrap(~Species)
library(datasets)
data("precip")
prcp <- data.frame(city = as.character(names(precip)),
precipitation = (unname(precip)))
ggplot(head(prcp, 10))+
geom_bar(aes(reorder(city, precipitation),
precipitation),
stat="identity",
fill="darkred")+
coord_flip()
ggplot(prcp)+
geom_bar(aes(x= reorder(city,precipitation), #Reorder це функція яка пересортує city і пересортовує її так як нам зручно. Помагає посуртувати дані не за алфавітом а в порядку збільшення чи зменшення.
y = precipitation),
stat="identity",
fill="darkblue")+
coord_flip()
data("economics")
head(economics)
ggplot(economics)+
geom_area(aes(x = date, y = unemploy),
stat="identity",
fill="darkred",
alpha=0.3)+
geom_line(aes(x = date, y = unemploy),
size=1,
color="darkred")+
theme_gray()
library(dplyr)
data("mtcars")
head(mtcars)
ggplot(mtcars)+
geom_histogram(aes(x=mpg),
binwidth = 1,
fill="darkred")
ggplot(declarations) +
geom_histogram(aes(flat_area),
binwidth = 100)
library(dplyr)
library(readr)
df <- read_csv("D:/УКУ/datavisualisation/finalProject/assessment_y2019_3m.csv")
library(dplyr)
library(readr)
assessment <- read_csv("D:/УКУ/datavisualisation/finalProject/assessment_y2019_3m.csv")
View(assessment)
library(dplyr)
library(readr)
assessment <- read_csv("D:/УКУ/datavisualisation/finalProject/assessment_y2019_3m.csv")
View(assessment)
assessment_selected <- assessment %>% select(company_type, total_mark)
assessment_company_type <- assessment_selected %>% group_by(company_type) %>% summarise(count=n())
assessment_company_type_sorted <- assessment_company_type[order(-assessment_company_type$count),]
View(assessment_company_type_sorted)
#install.packages("ggplot2")
library(ggplot2)
ggplot(assessment_company_type_sorted, aes(x=reorder(company_type, -total_mark), y=total_mark)) +
geom_bar(stat="identity", fill="darkred") +
xlab("Тип компанії") +
ylab("Оцінка результатів фінансової діяльності") +
labs(title = "Оцінка результатів фінансово-господарської діяльності підприємств державного сектору економіки",
subtitle = "Реєстрація автомобілів в 2019 році",
caption = "Дані за 3 місяці 2019.") +
coord_flip()
#install.packages("ggplot2")
library(ggplot2)
ggplot(assessment_selected, aes(x=reorder(company_type, -total_mark), y=total_mark)) +
geom_bar(stat="identity", fill="darkred") +
xlab("Тип компанії") +
ylab("Оцінка результатів фінансової діяльності") +
labs(title = "Оцінка результатів фінансово-господарської діяльності підприємств державного сектору економіки",
subtitle = "Реєстрація автомобілів в 2019 році",
caption = "Дані за 3 місяці 2019.") +
coord_flip()
#install.packages("ggplot2")
library(ggplot2)
ggplot(assessment_selected, aes(x=reorder(company_type, -total_mark), y=total_mark)) +
geom_bar(stat="identity", width=.5) +
xlab("Тип компанії") +
ylab("Оцінка результатів фінансової діяльності") +
labs(title = "Оцінка результатів фінансово-господарської діяльності підприємств державного сектору економіки",
subtitle = "Реєстрація автомобілів в 2019 році",
caption = "Дані за 3 місяці 2019.") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
#install.packages("ggplot2")
library(ggplot2)
ggplot(head(assessment_selected, 10))+
geom_bar(aes(reorder(company_type, total_mark),
total_mark),
stat="identity",
fill="darkred")+
coord_flip()
assessment_selected <- assessment %>% select(company_type, total_mark)
View(assessment_selected)
assessment_company_type <- assessment_selected %>% group_by(company_type) %>% summarise(count=n())
assessment_company_type_sorted <- assessment_company_type[order(-assessment_company_type$count),]
View(assessment_company_type_sorted)
#install.packages("ggplot2")
library(ggplot2)
ggplot(assessment_company_type_sorted, aes(x=reorder(company_type, -count), y=count)) +
geom_bar(stat="identity", fill="darkred") +
xlab("Тип компанії") +
ylab("Загальна оцінка результатів фінансової діяльності за типом компанії") +
labs(title = "Оцінка результатів фінансово-господарської діяльності підприємств державного сектору економіки",
subtitle = "Реєстрація автомобілів в 2019 році",
caption = "Дані за 3 місяці 2019.") +
coord_flip()
#install.packages("ggplot2")
library(ggplot2)
ggplot(assessment_company_type_sorted, aes(x=reorder(company_type, -count), y=count)) +
geom_bar(stat="identity", fill="darkred")
#install.packages("ggplot2")
library(extrafont)
#install.packages("ggplot2")
require(extrafont)
library(ggplot2)
ggplot(assessment_company_type_sorted, aes(x=reorder(company_type, -count), y=count)) +
geom_bar(stat="identity", fill="darkred") +
xlab("Тип компанії") +
ylab("Загальна оцінка результатів фінансової діяльності за типом компанії") +
labs(title = "Оцінка результатів фінансово-господарської діяльності підприємств державного сектору економіки",
subtitle = "Реєстрація автомобілів в 2019 році",
caption = "Дані за 3 місяці 2019.") +
coord_flip()
